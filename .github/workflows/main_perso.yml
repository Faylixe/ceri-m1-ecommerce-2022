name: Test, Build, and Deploy

on: [push]

jobs:
  build_frontend_container:
    if: "contains(github.event.head_commit.message, '[deploy_perso]')"
    name: Build Frontend Container
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: docker compose build
      - name: Tag to version
        run: docker tag frontend-cerythme europe-west1-docker.pkg.dev/cerythme-373316/cerythme/frontend:0.0.1
      - name: Login to registry
        run: docker login -u _json_key_base64 -p ${{ secrets.DOCKER_REGISTRY_PERSO_PASSWORD }} https://europe-west1-docker.pkg.dev/cerythme-373316/cerythme
      - name: Push to registry
        run: docker push europe-west1-docker.pkg.dev/cerythme-373316/cerythme/frontend:0.0.1

  build_backend_container:
    if: "contains(github.event.head_commit.message, '[deploy_perso]')"
    name: Build Backend Container    
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: docker compose build
      - name: Tag to version
        run: docker tag backend-cerythme europe-west1-docker.pkg.dev/cerythme-373316/cerythme/backend:0.0.1
      - name: Login to registry
        run: docker login -u _json_key_base64 -p ${{ secrets.DOCKER_REGISTRY_PERSO_PASSWORD }} https://europe-west1-docker.pkg.dev/cerythme-373316/cerythme
      - name: Push to registry
        run: docker push europe-west1-docker.pkg.dev/cerythme-373316/cerythme/backend:0.0.1

  deploy:
    if: "contains(github.event.head_commit.message, '[deploy_perso]')"
    name: Deploy
    needs: [build_frontend_container, build_backend_container]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
      - name: Terraform Remove State
        run: terraform state rm google_cloud_run_service_iam_policy
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false