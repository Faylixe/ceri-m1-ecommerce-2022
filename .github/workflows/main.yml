name: vinyl-actions
on:
  push:
    branches: ["main", "action_branch"]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run test:unit


  build-frontend:
    needs: test-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - name: Building docker images and push to the registry
        run: |
          docker login -u _json_key_base64 -p "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" https://europe-west1-docker.pkg.dev/ceri-m1-ecommerce-2022/greenfish
          docker build -t frontend -f Dockerfile .
          docker tag frontend  europe-west1-docker.pkg.dev/ceri-m1-ecommerce-2022/greenfish/frontend:0.0.1


  test-backend:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: backend
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-python@v2
          with:
            python-version: '3.9'
        - run: pip install poetry
        - run: poetry install 
        - run: poetry run pytest tests/

  build-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
      - name: Building docker images and push to the registry
        run: |
          docker login -u _json_key_base64 -p "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" https://europe-west1-docker.pkg.dev/ceri-m1-ecommerce-2022/greenfish
          docker build -t backend -f Dockerfile .
          docker tag backend  europe-west1-docker.pkg.dev/ceri-m1-ecommerce-2022/greenfish/backend:0.0.1
  deploy:
      needs: [build-frontend,build-backend]
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: terraform
      steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: terraform plan -no-color -input=false
        
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=False
  