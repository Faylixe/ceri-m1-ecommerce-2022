{"ast":null,"code":"// function decodeJwtResponse(token) {\n//   let base64Url = token.split('.')[1]\n//   let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n//   let jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n//       return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n//   }).join(''));\n//   return JSON.parse(jsonPayload)\n// }\n\nconst callbackResponse = response => {\n  // This callback will be triggered when the user selects or login to\n  // his Google account from the popup\n  console.log(\"Handle the response\", response);\n};\n\n// let responsePayload;\n// console.log(responsePayload);\n// window.handleCalback = (response) => {\n//   responsePayload = callbackResponse(response.credential);\n// }\n\n// let responsePayload;\n// console.log(responsePayload);\n// window.handleCredentialResponse = (response) => {\n//   // decodeJwtResponse() is a custom function defined by you\n//   // to decode the credential response.\n//   responsePayload = decodeJwtResponse(response.credential);\n\n//   console.log(\"ID: \" + responsePayload.sub);\n//   console.log('Full Name: ' + responsePayload.name);\n//   console.log('Given Name: ' + responsePayload.given_name);\n//   console.log('Family Name: ' + responsePayload.family_name);\n//   console.log(\"Image URL: \" + responsePayload.picture);\n//   console.log(\"Email: \" + responsePayload.email);\n// }\n\nexport default {\n  mounted() {\n    this.$store.commit('updateCartFromLocalStorage'); // Changed commit to dispatch\n  }\n};","map":{"version":3,"mappings":"AAWE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,gBAAe,GAAKC,QAAQ,IAAK;EACrC;EACA;EACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ;AAC7C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;EACbG,OAAO,GAAG;IACR,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,4BAA4B,CAAC,EAAE;EACpD;AACF,CAAC","names":["callbackResponse","response","console","log","mounted","$store","commit"],"sourceRoot":"","sources":["/home/thomas/Documents/FAC/M2/e-com/JC-Vinyl/ceri-m1-ecommerce-2022/front/jcvynil/src/App.vue"],"sourcesContent":["<template>\n    <GoogleLogin :callback=\"callbackResponse\"/>\n\n    <nav>\n      <router-link to=\"/\">Accueil</router-link> |\n      <router-link to=\"/cart\">Panier</router-link>\n    </nav>\n    <router-view/>\n</template>\n\n<script>\n  // function decodeJwtResponse(token) {\n  //   let base64Url = token.split('.')[1]\n  //   let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  //   let jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n  //       return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  //   }).join(''));\n  //   return JSON.parse(jsonPayload)\n  // }\n\n  const callbackResponse = (response) => {\n    // This callback will be triggered when the user selects or login to\n    // his Google account from the popup\n    console.log(\"Handle the response\", response)\n  }\n\n  // let responsePayload;\n  // console.log(responsePayload);\n  // window.handleCalback = (response) => {\n  //   responsePayload = callbackResponse(response.credential);\n  // }\n\n  // let responsePayload;\n  // console.log(responsePayload);\n  // window.handleCredentialResponse = (response) => {\n  //   // decodeJwtResponse() is a custom function defined by you\n  //   // to decode the credential response.\n  //   responsePayload = decodeJwtResponse(response.credential);\n\n  //   console.log(\"ID: \" + responsePayload.sub);\n  //   console.log('Full Name: ' + responsePayload.name);\n  //   console.log('Given Name: ' + responsePayload.given_name);\n  //   console.log('Family Name: ' + responsePayload.family_name);\n  //   console.log(\"Image URL: \" + responsePayload.picture);\n  //   console.log(\"Email: \" + responsePayload.email);\n  // }\n\n  export default {\n    mounted() {\n      this.$store.commit('updateCartFromLocalStorage'); // Changed commit to dispatch\n    }\n  };\n</script>\n\n<style lang=\"scss\">\n  #app {\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: white;\n  }\n\n  html, body {\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n  }\n\n  body {\n    background-color: #282828;\n  }\n\n  nav {\n    padding: 10px;\n    width: 100%;\n    height: 30px;\n    background-color: #404040;\n    line-height: 30px;\n\n    a {\n      font-weight: bold;\n      color: white;\n      text-decoration: none;\n      margin: 0 5px 0 5px;\n      font-size: 1.25rem;\n\n      &.router-link-exact-active {\n        color: orange;\n        text-decoration: underline;\n      }\n    }\n  }\n\n  .text-center {\n    text-align: center;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}